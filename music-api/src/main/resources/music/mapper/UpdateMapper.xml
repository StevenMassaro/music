<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="music.mapper.UpdateMapper">
    <insert id="insertUpdate">
        INSERT INTO music.trackupdates (songid, field, newvalue, updatetype)
        VALUES(#{songId}, #{field}, #{newValue}, 1)
        ON CONFLICT (songid, field)
		DO UPDATE SET newvalue = #{newValue}
    </insert>

    <select id="list" resultMap="trackUpdateResultMap">
        SELECT * FROM music.trackupdates ORDER BY id
    </select>

	<select id="count" resultType="Long">
		SELECT COUNT(*) FROM music.trackupdates
	</select>

	<delete id="deleteById">
		DELETE FROM music.trackupdates
		WHERE id = #{id}
	</delete>

	<delete id="deleteByTrackId">
		DELETE FROM music.trackupdates
		WHERE songid = #{trackId}
	</delete>

    <resultMap id="trackUpdateResultMap" type="music.model.TrackUpdate">
        <constructor>
            <idArg column="id" javaType="_long"/>
            <arg column="songid" javaType="_long"/>
            <arg column="field" javaType="String"/>
            <arg column="newvalue" javaType="String"/>
            <arg column="updatetype" javaType="Long"/>
        </constructor>
    </resultMap>
</mapper>